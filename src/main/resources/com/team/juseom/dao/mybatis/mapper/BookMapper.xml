<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.juseom.dao.mybatis.mapper.BookMapper">
	<cache />

	<select id="getAuction" resultType="Auction">
		SELECT
		AUCTIONID,
		BOOKID,
		STARTPRICE,
		PRESENTPRICE,
		SALESNUMBER,
		BIDNUMBER,
		ENDTIME
		FROM AUCTION
		WHERE BOOKID = #{bookId}
	</select>

	<insert id="insertBook" parameterType="Book">
		<selectKey keyProperty="bookId" resultType="int"
			order="BEFORE">
			SELECT book_seq.nextval AS bookId FROM DUAL
		</selectKey>
		INSERT INTO BOOK
		(BOOKID, USERID, IMAGEURL, NAME, AUTHOR, PUBLISHER, PUBLICATIONDATE, PRICE,
		CONDITION, DETAIL)
		VALUES
		(#{bookId}, #{userId}, #{imageUrl}, #{name}, #{author}, #{publisher}, #{date},
		#{price}, #{condition}, #{detail})
	</insert>

	<insert id="insertSale" parameterType="Sale">
		<selectKey keyProperty="saleId" resultType="int"
			order="BEFORE">
			SELECT sale_seq.nextval AS saleId FROM DUAL
		</selectKey>
		INSERT INTO SALE
		(SALEID, SUGGESTPRICE, BOOKID)
		VALUES
		(#{saleId}, #{suggestPrice}, #{book.bookId})
	</insert>

	<insert id="insertAuction" parameterType="Auction">
		<selectKey keyProperty="auctionId" resultType="int"
			order="BEFORE">
			SELECT auction_seq.nextval AS auctionId FROM DUAL
		</selectKey>
		INSERT INTO AUCTION
		(AUCTIONID, STARTPRICE, SALESNUMBER, ENDTIME, PRESENTPRICE, BIDNUMBER, STATUS,
		BOOKID)
		VALUES
		(#{auctionId}, #{startPrice}, #{salesNumber}, #{endTime}, #{presentPrice},
		#{bidNumber}, #{status}, #{book.bookId})
	</insert>

	<insert id="insertShare" parameterType="Share">
		<selectKey keyProperty="shareId" resultType="int"
			order="BEFORE">
			SELECT share_seq.nextval AS shareId FROM DUAL
		</selectKey>
		INSERT INTO SHARING
		(SHAREID, SHARENUMBER, ENDTIME, RAFFLETIME, PEOPLENUMBER, STATUS, BOOKID)
		VALUES
		(#{shareId}, #{shareNumber}, #{endTime}, #{raffleTime}, #{peopleNumber},
		#{status}, #{book.bookId})
	</insert>

	<select id="getBookListBySale" resultType="Sale">
		SELECT s.saleId AS saleId,
		s.suggestPrice AS suggestPrice,
		b.status AS "book.status",
		b.name AS "book.name",
		b.price AS "book.price",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl"
		FROM Sale s, Book b
		WHERE s.bookId = b.bookId
		ORDER BY s.bookId DESC
	</select>

	<select id="getBookListByAuction" resultType="Auction">
		SELECT a.auctionId AS auctionId,
		a.presentPrice AS presentPrice,
		a.bidNumber AS bidNumber,
		a.endTime AS endTime,
		a.status AS status,
		b.name AS "book.name",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl"
		FROM Auction a, Book b
		WHERE a.bookId = b.bookId
		ORDER BY a.bookId DESC
	</select>

	<select id="getBookListByShare" resultType="Share">
		SELECT s.shareId AS
		shareId,
		s.shareNumber AS shareNumber,
		s.peopleNumber AS peopleNumber,
		s.endTime AS endTime,
		s.raffleTime AS raffleTime,
		s.status AS status,
		b.name AS "book.name",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl"
		FROM Sharing s, Book b
		WHERE s.bookId = b.bookId
		ORDER BY s.bookId DESC
	</select>

	<select id="getSale" resultType="Sale">
		SELECT s.saleId AS saleId,
		s.suggestPrice AS suggestPrice,
		b.bookId AS "book.bookId",
		b.userId AS "book.userId",
		b.name AS "book.name",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl",
		b.publisher AS "book.publisher",
		b.publicationDate AS "book.date",
		b.price AS "book.price",
		b.detail AS "book.detail",
		b.status AS "book.status"
		FROM Sale s, Book b
		WHERE s.bookId = b.bookId AND
		s.saleId = ${value}
	</select>

	<select id="getOneAuction" resultType="Auction">
		SELECT a.auctionId AS auctionId,
		a.startPrice AS startPrice,
		a.presentPrice AS presentPrice,
		a.salesNumber AS salesNumber,
		a.bidNumber AS bidNumber,
		a.endTime AS endTime,
		a.status AS status,
		b.bookId AS "book.bookId",
		b.userId AS "book.userId",
		b.name AS "book.name",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl",
		b.publisher AS "book.publisher",
		b.publicationDate AS "book.date",
		b.price AS "book.price",
		b.detail AS "book.detail"
		FROM Auction a, Book b
		WHERE a.bookId = b.bookId AND
		a.auctionId = ${value}
	</select>

	<select id="getShare" resultType="Share">
		SELECT s.shareId AS shareId,
		s.shareNumber AS shareNumber,
		s.endTime AS endTime,
		s.raffleTime AS raffleTime,
		s.peopleNumber AS peopleNumber,
		s.status AS status,
		b.bookId AS "book.bookId",
		b.userId AS "book.userId",
		b.name AS "book.name",
		b.author AS "book.author",
		b.condition AS "book.condition",
		b.imageUrl AS "book.imageUrl",
		b.publisher AS "book.publisher",
		b.publicationDate AS "book.date",
		b.price AS "book.price",
		b.detail AS "book.detail"
		FROM Sharing s, Book b
		WHERE s.bookId = b.bookId AND
		s.shareId = ${value}
	</select>

	<update id="updateBidNumber">
		UPDATE AUCTION
		SET BIDNUMBER = (
			SELECT COUNT (*) FROM BIDDER WHERE AUCTIONID = #{auctionId}
		)
		WHERE AUCTIONID = ${auctionId}
	</update>

	<update id="updatePresentPrice" parameterType="String">
		<![CDATA[
			UPDATE AUCTION
			SET PRESENTPRICE = #{param2}
			WHERE auctionId = ${param1}
				AND PRESENTPRICE <= #{param2}
		]]>
	</update>
	
	<update id="updateSale" parameterType="String">
		<![CDATA[
			UPDATE SALE
			SET SUGGESTPRICE = #{param2}
			WHERE saleId = ${param1}
		]]>
	</update>
	
	<update id="updateBook" parameterType="String">
		<![CDATA[
			UPDATE BOOK
			SET DETAIL = #{param2}
			WHERE bookId = ${param1}
		]]>
	</update>

	<!-- 검색을 위한 mapper -->
	<select id="searchBookDetail" parameterType="String"
		resultType="Book">
		select distinct b.BOOKID ,
		b.USERID ,
		b.IMAGEURL ,
		b.NAME ,
		b.AUTHOR ,
		b.PUBLISHER ,
		b.PUBLICATIONDATE ,
		b.PRICE ,
		b.CONDITION ,
		b.DETAIL ,
		b.TRADETYPE
		from book b, auction a, sharing s, sale sa
		where (b.name LIKE '%${keyword}%' or b.author like '%${keyword}%' or
		b.publisher like '%${keyword}%' or b.detail like '%${keyword}%')
		and (price between ${lowPrice} and ${highPrice})
		and (tradeType like '%${tradeType}%')
		and (((b.BOOKID = a.BOOKID) AND a.status = 'OPEN') OR ((b.BOOKID =
		s.BOOKID) AND s.status = 'OPEN')
		OR ((b.BOOKID = sa.BOOKID) AND sa.status = 'OPEN'))
	</select>

	<!-- 마이페이지 글 검색 -->
	<select id="searchBookByUserId" parameterType="String"
		resultType="Book">
		SELECT *
		FROM Book
		WHERE userId = #{userId}
	</select>
	
	<!-- 마이페이지 채팅리스트 조회 -->
	<select id="getOtoChatListBookInfo" resultType="Book">
		SELECT distinct b.BOOKID ,
		b.USERID ,
		b.IMAGEURL ,
		b.NAME ,
		b.AUTHOR ,
		b.PUBLISHER ,
		b.PUBLICATIONDATE ,
		b.PRICE ,
		b.CONDITION ,
		b.DETAIL ,
		b.TRADETYPE
		FROM BOOK b, OTOCHAT o
		WHERE (b.BOOKID = #{bookId} AND o.BOOKID = #{bookId})
			AND (o.SELLERID = #{userId} OR SENDERID = #{userId})
	</select>
	
	<update id="closeAuctionEvent" parameterType="Date">
		<![CDATA[
			UPDATE AUCTION
			SET STATUS = 'CLOSE'
			WHERE ENDTIME <= #{curTime}
		]]>
	</update>
	
	<update id="updatePeopleNumber">
		UPDATE SHARING
		SET PEOPLENUMBER = (SELECT COUNT(*) FROM APPLIER WHERE SHAREID = #{SHAREID})
		WHERE shareId = #{shareId}
	</update>

	<update id="updateAuctionWinner">
		UPDATE AUCTION
		SET BIDWINNER = #{param1}
		WHERE AUCTIONID = #{param2}
	</update>
	
	<update id="updateShareWinner">
		UPDATE SHARING
		SET WINNER = #{param1}
		WHERE SHAREID = #{param2}
	</update>
	
</mapper>